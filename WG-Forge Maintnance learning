#учеба в WG-Forge Maintnance

Рабочий стол MacPro: /User/mbp13_2015/Desktop
Место хранения ключей на MAC: /Users/mbp13_2015/.ssh/id_rsa + 
на Windows  D:\.ssh  и C:\Users\uzer\.ssh
Your identification has been saved in C:\Users\uzer/.ssh/id_rsa.
Your public key has been saved in C:\Users\uzer/.ssh/id_rsa.pub.

cd ~ puttygen /User/mbp13_2015/Desktop/ageev_dmitry_wargaming_public_key.ppk  -O public-openssh -o id_rsa.pub 
ssh-rsa – то что сгенерировал Mac AAAAB3NzaC1yc2EAAAADAQABAAABAQDkox5idtc1W4xNrJa2y2RJnbe5OTvad1HcZ2OgRtqFklQQ2ig5hvwZtRcam188U50BSHKgR/WDPdu6Uef9FdZ6ryKDtzthYpROwziL2LtXVUL4L7Y5gRcm0bfsEoBplXY6iBGTIANFcuVJOKFopkpR4oz1VnqsNfa86OLkOeZs5wN8OJ7sQhiVCGVhJV8lKdX9ZVX0zKwO0Pwv9+Bd9QLcY3kd3lDczfMJmg+8tLpkxPJYR3qtFdP3e0K3n22WM2u6PTUIFnwNFDb4o/tGZGbMeKSD2jJtPRLp1KwACBWWHzKCkNGYpjbTvBds245ZKtGbLH2JAnbzLlrzGzG+VyrV ageev.dmitry@outlook.com

Вход на сервер: ssh centos@5.188.134.195
sudo su – команда для работы в терминале под пользователем root
sudo -i - получить права root под поролем текущего пользователя
sudo !! - запустить предыдущую команду с правами root
sudo useradd имя_пользователя - создание нового имени пользователя (только под правами root)
sudo useradd -m имя_пользователя - создание нового имени пользователя c созданием домашней папки в директории home (только под правами root)
passwd имя_пользователя1 - создание пароля для НОВОГО пользователя1 под root 
cat /etc/passwd - показывает сколько пользователей создано (последние строки файла)
sudo cat /etc/sudoers - файл показывает сколько пользователей с root-правами создано (через vim или vi - nano можно редактировать:
vim cat /etc/sudoers
sudo userdel -r имя_пользователя - удаляет пользователя со всеми его папками
sudo userdel -r -f  имя_пользователя - удаляет пользователя со всеми его папками не смотря на его запущенные процессы
1234 - пароль от linux на windiws
4321 - пароль ageev-dmitry от root в linux на windiws
4321 - passwd ageev-dmitry2
321 - passwd ageev-dmitry3
passwd ageev-dmitry-2 - создание root-пароля для пользователя ageev-dmitry-2 
54321 - пароль ageev-dmitry-2 от root в linux на windiws
login имя_пользователя - переход в терминале под другого пользователя (перед этим перейти в режиме root)
lsb_release - a - это командля для определения операционной системы linux
inxi -F тоже самое только более развернуто для определения операционной системы linux
cat /etc/issue* или cat /etc/*releas* - и еще тоже самое от Сергея Завадского это командля для определения операционной системы linux, дистрибутива Linux
usermod -G sudo имя_пользователя -   означает что необходимо добавить пользователя в группу sudo (ПРЕДВАРИТЕЛЬНО ВОЙТИ В РЕЖИМ root)
usermod -G tester имя_пользователя -   означает что необходимо добавить пользователя в группу tester (ПРЕДВАРИТЕЛЬНО ВОЙТИ В РЕЖИМ root)
groups имя_пользователя - покажет пользователей в группе sudo
reboot - перезагрузка
man ls - мануал по команде ls или любой другой команде, поиск по мануалу через /-l - поиск в мануале индекса -l  Чтобы выйти нажать q
mv  файл-источник1 файл-приемник2 – команда для переименования из файла-источника1 в файл-приемник2
mv  директория-источник1 директория-приемник2 – команда для переименования из директории-источника1 в директорию-приемник2
tail название файла - выводит последние 10 строк файла
tail -n 20 название файла - выводит последние 20 строк файла
tail -f название файла - выводит последние 10 строк файла в реальном времени. Выход из просмотра ctrl+C 
head название файла - выводит первые 10 строк файла
cat название файла - выводит все строки файла
cat название_файла1 название_файла2 > название_файла3 - объединят 2 файла в один файл3  (для удобства, например,  просмотра 2 лог-файлов с названием файл3)
cat название_файла1 | grep fail - выводит из файла1 только строки с текстом fail
cat test.log | grep fail | grep authentication -  выводит из файла1 только строки с текстом1 "fail" + текстом2  "authentication"
ls | grep fail - выводит из текущего каталога только файлы в названии которых есть слово "fail"
less название файла - также выводит все строки файла. Нажав /слово - можно найти данное "слово" в файле. Q- выйти из less
cp файл-источник1 файл-приемник2 – команда для копирования файла-источника1 в файл-приемник2

pwd -  показывает в какой дирректории сейчас вы находитесь
whoami - покажет текущего имя пользователя
cd .. - перейти на уровень выше (выйти из каталога/директории )
cd текущий каталог – войти в текущий каталог
cd или cd ~   - переместит в папку home текущего пользователя (/home/ageev-dmitry) гды бы вы до этого не находились
ls – просмотреть содержимое текущего каталога
ls  -a – вывод скрытых файлов
ls -l – показывает файлы на предмет исполняемые (х) или нет 
ls -al - показывает все+скрытые файлы на предмет исполняемые (х) или нет 
touch – создание файла 
mkdir – создание папки/директории

cron для запуска скриптов по времени находится в корне: /etc
vi cron.deny  - создает файл cron.deny чтобы прописать имя пользователя/ей с запретом к cron (войти предварительно через root), остальные пользователи будут иметь доступ к cron
либо (другой файл должен быть удален):
vi cron.allow - создает файл cron.allow чтобы прописать имя пользователя/ей с доступом к cron (войти предварительно через root), остальные пользователи не будут иметь доступ к cron
в файле  crontab  прописаны поля-сокращения: m (минуты 0-59) h (часы 0-23) dom (day of month 1-32) mon (месяцы 1-12) dow (day of week 0-6) user: 
* * * * * root echo "hello" > /tmp/hello.txt  - в файле crontab от имени root будет запускаться программа cron по переводу текста hello в файл /tmp/hello.txt каждую минуту
*/5 * * * * root echo "hello" > /tmp/hello.txt  - каждые 5 минут в файле crontab от имени root будет запускаться программа cron по переводу текста hello в файл /tmp/hello.txt 
*/10 * * * * root echo "hello" > /tmp/hello.txt  - каждые 10 минут в файле crontab от имени root будет запускаться программа cron по переводу текста hello в файл /tmp/hello.txt 
*/10 */2 * * * root echo "hello" > /tmp/hello.txt  - каждые 2/4/6 часа и 10/20/30 минут в файле crontab от имени root будет запускаться программа cron по переводу текста hello в файл /tmp/hello.txt 
*/5 * 1,15 * * root echo "hello" > /tmp/hello.txt  - каждые 5 минут 1го и 15го числа месяца в файле crontab от имени root будет запускаться программа cron по переводу текста hello в файл /tmp/hello.txt 
можно также написать скрипт-файл test.sh и поместить его (см ниже):
#!/bin/bash 
*/5 * 1,15 * * echo "hello" > /tmp/hello.txt  - каждые 5 минут 1го и 15го числа месяца будет запускаться программа cron по переводу текста hello в файл /tmp/hello.txt 
этот скрипт-файл test.sh затем нужно скопировать в директорию cron.daily  либо  cron.weekly через команду: cp test.sh . (что означает переместить его в эту директорию, предварительно в нее войдя)
далее через команду: tail -f /var/log/syslog в режиме реального времени можно наблюдать активность работы команды cron:
Jan  4 13:07:01 ubuntu CRON[4249]: (root) CMD (echo "hello" > /tmp/hello.txt)
Jan  4 13:08:01 ubuntu CRON[4252]: (root) CMD (echo "hello" > /tmp/hello.txt)
top - команда для просмотра запущенных процессов, -20 самый первый для исполления процесс, +19 - самый последний, внутри команды можно управлять очередью процессов, останавливать процессы 15 или 9 прекращать не дожидаясь их остановки
updatedb - обновляет базы данных всех имен для файлов, используемые GNU locate
locate название_файла1 - ищет файл1 и показывает путь к нему
find /путь -name название_файла2 - ищет файл2 и показывает путь к нему в папке /путь
find /etc -name cron - ищет файл cron и показывает путь к нему в папке /etc


поиск файла:
find /home/ -name "Docker*" -type f
apt update - индексирование / update
yum install mc - для установки mc -редактора mc
mcedit – редактирование файла
subl файл - редактирование файла (2) в терминале MacPro
vim echo-script.sh  – редактирование файла (3)
i – после ее нажатия можно редактировать файл в vim
:w имя файла – сохранение файла в vim
:q enter – выход из vim
:q! enter – выход из vim без сохранения
:wq - выход из vim c сохранением
rm файл– удаляет файл
rmdir - удаляет пустую директорию(папку, каталог)
rm -r моя_папка - удаляет непустую директорию(папку, каталог)
rm -Rfv моя_папка - удаляет непустую директорию(папку, каталог)

chmod +x script1.sh – команда  в терминале сделать скрипт script1.sh исполняемым
chmod o+r название_директории - команда  в терминале сделать директорию читаемой для других пользователей
chmod o-r название_директории - команда  в терминале сделать директорию НЕчитаемой для других пользователей
chmod 1=x 2=w 4=r - цифровой метод  1+4=5=x+r 1+2+4=7=x+w+r
chmod 745 название_директории- цифровой метод  означает что владелец директори имеет все права x+w+r, группа - права r. т.е. чтения, остальные 1+4=5=x+r
chown -R новый_владелец2.новый_владелец2_группы директория3 - меняет владельца3 дириктории3 (предварительно войти в режим root) на нового владельца2

echo "имя пользователя $USER"  -  # имя пользователя mbp13_2015
clear – очистка терминала (и cnrl+L)
grep – “выдрезает” нужные вам строки из текстовых файлов, которые содержат указанный пользователем текст
df -h - информация о системных ресурсах
netstat -nlpt – отображает информацию, сетевые подключения, статистику интерфейсов



yum install - Вариант инсталляции в системе Red Hat/centos:
yum install -y mariadb mariadb-server - установка mariadb mariadb-server
192.168.203.14/Zabbix
http://ithelp21.ru/ustanovka-zabbix-na-centos/
http://5.188.134.195/zabbix/setup.php
ithelp21 - пароль на пользователя Zabbix - DBPassword=ithelp21
3reBRakA – пароль для входа в CENTOS по SSH
вход в Zabbix: Admin – zabbix
curl suip.biz/ip/ - для проверки своего IP в консоли
0.0.0.0:5000 – означает что порт 5000 смотрит в интернет (0000)
127.0.0.1:25 - означает что порт 25 смотрит на локальную сеть (127.0.0.1)
Для открытия порта 10050:
iptables -A INPUT -i eth0 -p tcp --dport 10050 -j ACCEPT
iptables -A INPUT -i eth0 -p udp --dport 10050 -j ACCEPT
lsblk – показывает диски
blkid – для просмотра UUID
fdisk -l
df -h  - #Disk Free Space #  -h for human readable value
ps aux - #List Running Processes
echo "Home for the current user is: $HOME" - вывести домашнюю директорию текущего пользователя
history - история команд

Скрипты на BASH(Virtual Studio Code): 
cd /users/mbp13_2015/Projects/Bash_scripts
После создания скрипта в BASH его нужно сделать исполняемым: 
chmod +x script1.sh – команда  в терминале сделать скрипт script1.sh исполняемым
./ script1.sh  - запуск скрипта в терминале
Echo “…” – вывод инфы на экран терминала
echo "I have \$1 in my pocket" - обратная косая черта, перед знаком доллара даст возм рывести на экран знак $
#I have $1 in my pocket
Существуют два типа переменных, которые можно использовать в bash-скриптах:
- Переменные среды ($HOME и т.д.)
- Пользовательские переменные:
#!/bin/bash
# testing variables
grade=5
person="Adam"
echo "$person is a good boy, he is in grade $grade" 
#Adam is a good boy, he is in grade 5

Команду нужно заключить в два таких значка: обратного апострофа «`»:
mydir=`pwd`
При втором подходе c помощью конструкции $() то же самое записывают так:
mydir=$(pwd)
А скрипт, в итоге, может выглядеть так:
#!/bin/bash
mydir=$(pwd)
echo $mydir

if [ …. ] then …elif … else … fi
if [пробел  выражение/сравнение пробел]
больше: -gt
больше или равно: -ge
равно: -eq
меньше: -lt
меньше или равно: -le
не равно : -ne
цикл for в bash:
for … in … do … done
for ((i=1; i<=10; i++)) do … done
IFS=$”\n” – новая строка при чтение в цикле for 

ncat -l 5000 --keep-open --exec "/bin/cat" 
ncat 5.188.134.195 5000 - для проверки полученного результата echo-сервиса с другого комапа
https://kali.tools/?p=4578 - всё про ncat на русском с примерами
yum install nmap - инсталяция ncat в centos
Примеры запуска Ncat
Подключение к example.org используя протокол TCP на порту 8080:
ncat example.org 8080
Прослушивать входящие соединения используя протокол TCP на порту 8080:
ncat -l 8080
Перенаправить TCP порт 8080 на локальной машине на хост на порт 80:
ncat --sh-exec "ncat example.org 80" -l 8080 --keep-open
Прослушивать порт 8081 и прикрепить /bin/bash для исполнения переданных команд:
ncat --exec "/bin/bash" -l 8081 --keep-open
Привязать шелл (оболочку) к TCP порту 8081, ограничить доступ к хостам из локальной сети и ограничить максимальное число одновременных подключений на тремя:
ncat --exec "/bin/bash" --max-conns 3 --allow 192.168.0.0/24 -l 8081 --keep-open
Подключиться к smtphost:25 через сервер SOCKS4 на порту 1080:
ncat --proxy socks4host --proxy-type socks4 --proxy-auth joe smtphost 25
Подключиться к smtphost:25 через сервер SOCKS5 на порту 1080:
ncat --proxy socks5host --proxy-type socks5 --proxy-auth joe:secret smtphost 25
Создать HTTP прокси сервер на localhost на порту 8888:
ncat -l --proxy-type http localhost 8888
Отправить файл через TCP порт 9899 с host2 (клиент) на host1 (сервер):
HOST1$ ncat -l 9899 > outputfile
HOST2$ ncat HOST1 9899 < inputfile
Отправить в другом направлении, превратив Ncat в сервер «одного файла»:
HOST1$ ncat -l 9899 < inputfile
HOST2$ ncat HOST1 9899 > outputfile

Python3 скрипты: /usr/local/bin/charm
Python3 проекты: /Users/mbp13_2015/PycharmProjects/Lesson1
заметки о Python - в word на рабочем столе Windows
в Linux для того, чтобы попробовать код на работоспособность достаточно в консоли ввести команду python и сам код.

sudo scutil --set HostName myMacPro – переименовать пользователя в терминале)

3 информационных канала: “стандартный ввод” (STDIN), “стандартный вывод” (STDOUT) и “стандартная ошибка” (STDERR)
символ “>” используется для замены содержимого файла, 
а “>>” — для добавления данных в его конец
символ "|" - для того чтобы связать канал STDOUT одной команды с каналом STDIN другой

chsh -s /bin/bash - включение bash в качестве shell 
chsh -s /bin/zsh - включение zsh в качестве shell 

sudo apt-get install tree -y #запустит команду tree в Bash
sudo ln -s /Appl
ications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl
# устанока команды subl в консоль BASH
 

 виртуализация VirtualBox + vagrant
 установить VirtualBox + vagrant на Mac 
 зайти в папку cd ~/wgforge2019_virtualization/
 ввести команду vagrant up
 vagrant ssh
попадаем в vagrant@wgforge2019:~$  
docker ps - показывает запущенные контейнеры в доккере
docker ps -a - показывает остановленные контейнеры в доккере
docker stop 59f4de5169dd - остановить контейнер в доккере
docker rm 59f4de5169dd - удалить контейнер в доккере
docker images - показывает images контейнеров в доккере - он не удаляется


FROM debian

RUN apt-get update && apt-get install -y python
RUN apt-get update && apt-get install -y nmap

ADD client.py /client.py

CMD ncat -l 5000 -k --exec /bin/cat
CMD ["/usr/bin/python","/client.py"]

version: '3'
services:
  apache2:
    build: ~/examples/docker/
    image: apache2.4-php7.0:latest
    ports:
      - "80:80"
    volumes:
      - '/home/vagrant/dokuwiki/:/var/www/'


restart: always
http://localhost:8080  - мой localhost:8080 

find / -type f -size +1G - для поиска большого обема файлов

ip a - для просмотра своего IP
systemctl start mariadb - для запуска mariadb
systemctl status mariadb - для просмотра статуса mariadb


select count(*) from title;
describe title;